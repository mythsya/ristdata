/*
 * This build file was auto generated by running the Gradle 'init' task
 * by 'xgx' at '6/21/16 2:46 PM' with Gradle 2.12
 *
 * This generated file contains a commented-out sample Java project to get you started.
 * For more details take a look at the Java Quickstart chapter in the Gradle
 * user guide available at https://docs.gradle.org/2.12/userguide/tutorial_java_projects.html
 */


// Apply the java plugin to add support for Java
apply plugin: 'java'
apply plugin: 'maven'
apply plugin: 'eclipse'

// In this section you declare where to find the dependencies of your project
repositories {
    // Use 'jcenter' for resolving your dependencies.
    // You can declare any Maven/Ivy/file repository here.
    mavenLocal()
    mavenCentral()
    jcenter()
}

// In this section you declare the dependencies for your production and test code
dependencies {
    compile 'org.springframework.boot:spring-boot-starter-web:1.3.5.RELEASE'

    compile 'org.springframework.boot:spring-boot-starter-data-jpa:1.3.5.RELEASE'

	testCompile 'org.springframework.boot:spring-boot-starter-test:1.3.5.RELEASE'


    // The production code uses the SLF4J logging API at compile time
    compile 'org.slf4j:slf4j-api:1.7.18'

    compile 'com.alibaba:druid:1.0.22'

    compile 'com.oracle:ojdbc6:11.2.0.2'

    // Declare the dependency for your favourite test framework you want to use in your tests.
    // TestNG is also supported by the Gradle Test task. Just change the
    // testCompile dependency to testCompile 'org.testng:testng:6.8.1' and add
    // 'test.useTestNG()' to your build script.
    testCompile 'junit:junit:4.12'
}

